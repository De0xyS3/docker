**Primer Punto**

Update y upgrade del S.O.

```
 apt-get update
 apt-get upgrade
```
Desinstalamos apparmor, es una buena herramienta interna de seguridad, pero s,i no estamos seguros de cómo configurarlo, provocará muchos problemas.

```
systemctl stop apparmor
update-rc.d -f apparmor remove
apt-get remove apparmor apparmor-utils -y
```


Cambio de la zona horaria
```
timedatectl set-timezone America/Lima
locale-gen es_PE.UTF-8
dpkg-reconfigure locales
```

Reinicio del servidor `shutdown -r now`

Procedemos a instalar docker CE

```
apt-get install apt-transport-https ca-certificates curl gnupg \
lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
```
```
echo \
"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/nul
```
Instalamos docker-ce y git

```
apt-get update
apt-get install git
apt-get install docker-ce docker-ce-cl
apt-get install containerd.io:amd64=1.4.4-1

```

Ejecutar estos comandos solo si el procesador es arm 

```
curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh
sudo usermod -aG docker $USER
apt-get install containerd.io:arm64=1.4.4-1
```

Instalamos NGINX (Opcional) `apt-get install nginx`


Verificamos que docker se ejecute
```
systemctl status docker
```
**Segundo Punto**

Instalacion de traefik

Creacion de archivos 

```
mkdir -p data/configurations
touch docker-compose.yml
touch data/traefik.yml
touch data/acme.json
touch data/configurations/dynamic.yml
chmod 600 data/acme.json
```
Docker-compose

editar archivo  `~/docker-compose.yml` y pegar el siguiente codigo: editar la linea `secure.rule=Host` e ingresar el dominio

```
version: '3.7'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
      # Add folder with dynamic configuration yml
      - ./data/configurations:/configurations
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.b2cti.com`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      - "traefik.http.routers.traefik-secure.service=api@internal"

networks:
  proxy:
    external: true
```

configuracion estatica 

editar locacion de archivo `~/data/traefik.yml`

```
api:
  dashboard: true

entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure

  websecure:
    address: :443
    http:
      middlewares:
        - secureHeaders@file
        - nofloc@file
      tls:
        certResolver: letsencrypt

pilot:
  dashboard: false

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  file:
    filename: /configurations/dynamic.yml

certificatesResolvers:
  letsencrypt:
    acme:
      email: administracion@b2cti.com
      storage: acme.json
      keyType: EC384
      httpChallenge:
        entryPoint: web

  buypass:
    acme:
      email: administracion@b2cti.com
      storage: acme.json
      caServer: https://api.buypass.com/acme/directory
      keyType: EC256
      httpChallenge:
        entryPoint: web
```

Configuracion dinamica
locacion `~/data/configurations/dynamic.yml`

```
# Dynamic configuration
http:
  middlewares:
    nofloc:
      headers:
        customResponseHeaders:
          Permissions-Policy: "interest-cohort=()"
    secureHeaders:
      headers:
        sslRedirect: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000   

    # UserName : admin
    # Password : qwer1234    
    user-auth:
      basicAuth:
        users:
          - "admin:$apr1$tm53ra6x$FntXd6jcvxYM/YH0P2hcc1"

tls:
  options:
    default:
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
      minVersion: VersionTLS12
```

Una vez ingresado estos codigos, nos dirigimos al directorio `/data` e inciamos nuestro contenedor traefik, debemos verificar que en dicho directorio se encuentre el archivo > `traefik.yml`

```
docker-compose up -d
```

Una vez ejecutado, ingresamos via web al dominio registrado e inciamos session con las credeciales de acceso definidas :

# UserName : admin
# Password : qwer1234    

**Tercer Punto**

Instalacion de wordpress :


creamos un directorio wordpress_website y una subcarpeta con el nombre del sitio web

```
mkdir website_wordpress
cd website_wordpress/
mkdir kb.becti.com
```

Una vez que hemos ingresado, creamos un nuevo archivo `docker-compose.yml`
en ella ingresamos el siguiente codigo:

```
version: '3.7'

services:
  db:
    image: mariadb
    container_name: wp-db-kb2cti
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - default
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: r0m4n0s.1507
      MYSQL_DATABASE: wordpress
      MYSQL_USER: root
      MYSQL_PASSWORD: r0m4n0s.1507

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    container_name: wordpress-kb2cti
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: r0m4n0s.1507
    volumes:
      - ./wp-data:/var/www/html/wp-content
    networks:
      - proxy
      - default
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.wordpress-kb2ctisecure.entrypoints=websecure"
      - "traefik.http.routers.wordpress-kb2cti-secure.rule=Host(`kb.b2cti.com`)"
      # - "traefik.http.routers.wordpress-secure.service=wordpress-service"
      # - "traefik.http.services.wordpress-service.loadbalancer.server.port=80"

volumes:
  db-data:
    name: wp-db-data-kb2cti
networks:
  proxy:
    external: true
```
luego inciamos el contenedor 

```
docker-compose up -d
```

si se desea crear mas contenedores en wordpress, se debe crear otro directorio, copiar y editar el archivo .yml :

Puntos a modificar 
nombre de `contenedor `y los `labels `de traefik con el nombre de dominio nuevo
